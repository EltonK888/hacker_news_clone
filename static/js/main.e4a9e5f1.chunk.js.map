{"version":3,"sources":["components/story.jsx","helpers.js","stories.js","components/user.jsx","components/comment.jsx","post.js","components/header.jsx","components/darkmodeswitch.jsx","components/navbar.jsx","index.js"],"names":["Story","props","darkMode","react_default","a","createElement","className","href","titleLink","title","points","react_router_dom","to","concat","by","time","id","numComments","URL","PRTY","getStory","_x","_getStory","apply","this","arguments","_callee","response","storyPromise","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","getHumanTime","unixTime","date","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","amPM","loadStories","_x2","_x3","_loadStories","_callee2","type","that","top","promArray","_context2","console","log","splice","forEach","push","Promise","all","then","promRes","i","state","stories","_unused2","setState","loaded","Stories","_this","match","params","topStories","darktheme","map","story","story_Story","key","descendants","url","score","_unused","style","color","themeTypeStories","class","role","Component","User","user","userInfo","c","_this2","storyIds","submitted","userPromise","_this3","deleted","dead","filter","created","karma","dangerouslySetInnerHTML","__html","about","length","loadUser","Comment","text","Post","comments","commentArray","kids","cId","_this$state","loadPost","Header","DarkModeSwitch","Fragment","htmlFor","fontSize","react_switch_default","checked","onChange","themeChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","Navbar","exact","activeStyle","textDecoration","App","getInitialTheme","document","body","backgroundColor","localStorage","setItem","JSON","stringify","parse","getItem","transition","handleThemeChange","react_router","path","render","stories_Stories","Object","assign","user_User","post_Post","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.e4a9e5f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Component to load an individual story */\r\nexport const Story = (props) => {\r\n    function storyThemeType() {\r\n        if (props.darkMode) {\r\n            return (\r\n                <div className=\"dark-mode-story\">\r\n                    <h5 className=\"storyTitle\"><a className=\"titleLink\" href={props.titleLink}>{props.title}</a></h5>\r\n                    <p className=\"storyDetails\">{props.points} points by <Link to={`/user/${props.by}`} className=\"dark-mode-link\">{props.by}</Link> on {props.time} with <Link to={`/post/${props.id}`} className=\"dark-mode-link\">{props.numComments}</Link> comments</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"story\">\r\n                    <h5 className=\"storyTitle\"><a className=\"titleLink\" href={props.titleLink}>{props.title}</a></h5>\r\n                    <p className=\"storyDetails\">{props.points} points by <Link to={`/user/${props.by}`} className=\"descriptionLink\">{props.by}</Link> on {props.time} with <Link to={`/post/${props.id}`} className=\"descriptionLink\">{props.numComments}</Link> comments</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        storyThemeType()\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Story } from \"./components/story\"\r\n\r\n\r\nexport const URL= \"https://hacker-news.firebaseio.com/v0/\"; // the base URL to make fetch calls to the Hacker News API\r\nexport const PRTY = \".json?print=pretty\"; // if manually visit the http page, will show the json data nicely formatted. Not necessary but helpful for debugging\r\n\r\n\r\n/* Returns a promise containing an object with the information of the given story id */\r\nexport async function getStory(id) {\r\n    const response = await fetch(`${URL}/item/${id}${PRTY}`);\r\n    let storyPromise = response.json();\r\n    return storyPromise;\r\n}\r\n\r\n\r\n/* Returns a string containing the time in the 'format: mm/dd/yyyy, hh:mm AM/PM' given the unix based time */\r\nexport function getHumanTime(unixTime) {\r\n    let date = new Date(unixTime * 1000);\r\n    let month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`\r\n    let day = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`;\r\n    let year = date.getFullYear() < 10 ? `0${date.getFullYear()}` : `${date.getFullYear()}`;\r\n    let hours = date.getHours() === 0 ? `12` : date.getHours() <= 12 ? `${date.getHours()}` : `${date.getHours() - 12}`;\r\n    let minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : `${date.getMinutes()}`;\r\n    let amPM = date.getHours() >= 12 ? \"PM\" : \"AM\"\r\n    return `${month}/${day}/${year}, ${hours}:${minutes} ${amPM}`\r\n}\r\n\r\n\r\n/* Helper function to load Top/New stories based off type */\r\nexport async function loadStories(type, that) {\r\n    const top = await fetch(`${URL}/${type}${PRTY}`);\r\n    const response = await top.json();\r\n    console.log(response);\r\n    let promArray = []\r\n    response.splice(0,50).forEach(id => {\r\n        promArray.push(getStory(id));\r\n    });\r\n    console.log(promArray)\r\n    Promise.all(promArray)\r\n    .then(promRes => {\r\n        promRes.forEach(i => {\r\n            try {\r\n                if (i.type === \"story\") {\r\n                    that.state.stories.push(i);\r\n                }\r\n            } catch {\r\n                console.log(\"invalid story type\");\r\n            }\r\n        })\r\n        that.setState({stories: that.state.stories, loaded: true});\r\n    })\r\n}\r\n\r\n/* Function to create an array of Top/New stories */\r\nexport function themeTypeStories(darktheme, that) {\r\n    try {\r\n        return that.state.stories.map(story => <Story key={story.id} id={story.id} title={story.title} by={story.by} time={getHumanTime(story.time)} numComments={story.descendants} titleLink={story.url} points={story.score} darkMode={darktheme}/>)\r\n    }\r\n    catch {\r\n        return <h1 style={{color: darktheme ? \"rgb(185,56,56)\" : \"black\"}}>Something went wrong, please reload the page</h1>\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { loadStories, themeTypeStories } from \"./helpers\"\r\n\r\n\r\n/* Component to load the Top/New stories */\r\nexport default class Stories extends Component {\r\n    state = {\r\n        stories: [], // Store the stories from fetch call\r\n        loaded: false,\r\n        darkMode: this.props.darkMode,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let type;\r\n        if (this.props.match.params.type === \"new\") {\r\n            type = \"newstories\";\r\n        } else {\r\n            type = \"topstories\";\r\n        }\r\n        loadStories(type, this);\r\n    }\r\n\r\n    render() {\r\n        const topStories = themeTypeStories(this.props.darkMode, this)\r\n        return (\r\n            <div>\r\n                {this.state.loaded ? topStories :\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"spinner-border text-danger\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Story } from \"./story\"\r\nimport { getStory, getHumanTime, URL, PRTY } from \"../helpers\"\r\n\r\n/* Component to load a User containing their name, about me, and posts */\r\nexport default class User extends Component {\r\n    state = {\r\n        user: null,\r\n        loaded: false,\r\n        stories: []\r\n    }\r\n    async componentDidMount() {\r\n        let userPromise = this.userInfo();\r\n        userPromise.then(c => {\r\n            this.state.user = c;\r\n            let storyIds = c.submitted.splice(0,50);\r\n            console.log(storyIds)\r\n            let promArray = [];\r\n            storyIds.forEach(id => {\r\n                promArray.push(getStory(id));\r\n            })\r\n            Promise.all(promArray)\r\n            .then(promRes => {\r\n                promRes.forEach(i => this.state.stories.push(i));\r\n                console.log(this.state.stories);\r\n                this.setState({user: this.state.user, loaded: true, stories: this.state.stories})\r\n            })\r\n        })\r\n    }\r\n\r\n    /* Return a Promise containing information about the user given in the url */\r\n    async userInfo () {\r\n        let response = await fetch(`${URL}/user/${this.props.match.params.id}${PRTY}`)\r\n        let userPromise = response.json();\r\n        return userPromise;\r\n    }\r\n\r\n    /* Renders the User id, about, and their posts to the page */\r\n    loadUser() {\r\n        if (!this.state.loaded) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"spinner-border text-danger\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            let stories = this.state.stories.map(story => story.type === \"story\" && !story.deleted && !story.dead? <Story key={story.id} id={story.id} title={story.title} by={story.by} time={getHumanTime(story.time)} numComments={story.descendants} titleLink={story.url} points={story.score} darkMode={this.props.darkMode}/> : null).filter(story => story !== null);\r\n            return (\r\n                <div>\r\n                    <h2 className={this.props.darkMode ? \"dark-mode-text\" : \"\"}>{this.state.user.id}</h2>\r\n                    <p className=\"storyDetails\">Joined <b>{getHumanTime(this.state.user.created)}</b> has <b>{this.state.user.karma}</b> karma</p>\r\n                    <p className={this.props.darkMode ? \"aboutUser dark-mode-text\" : \"aboutUser\"} dangerouslySetInnerHTML={{__html: this.state.user.about}}></p>\r\n                    <h3 className={this.props.darkMode ? \"dark-mode-text\" : \"\"}>Posts</h3>\r\n                    {stories.length === 0 ? <p>This user has not posted yet</p> : stories}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.loadUser()\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { getHumanTime } from \"../helpers\"\n\n/* Component for an individual comment block */\nexport default function Comment(props) {\n    if (props.darkMode) {\n        return (\n            <div className=\"card bg-dark text-light mb-3\">\n                <div className=\"card-body\">\n                    <p className=\"storyDetails\">by <Link to={`/user/${props.by}`} className=\"dark-mode-link\">{props.by}</Link> on {getHumanTime(props.time)}</p>\n                    <p className=\"card-text\" dangerouslySetInnerHTML={{__html: props.text}}></p>\n                </div>\n            </div> \n        )\n    } else {\n        return (\n            <div className=\"card bg-light mb-3\">\n                <div className=\"card-body\">\n                    <p className=\"storyDetails\">by <Link to={`/user/${props.by}`} className=\"descriptionLink\">{props.by}</Link> on {getHumanTime(props.time)}</p>\n                    <p className=\"card-text\" dangerouslySetInnerHTML={{__html: props.text}}></p>\n                </div>\n            </div> \n        )\n    }\n}\n","import React, { Component } from 'react';\r\nimport Comment from \"./components/comment\";\r\nimport { getStory, getHumanTime } from \"./helpers\";\r\nimport { Story } from \"./components/story\"\r\n\r\n/* The component for individual posts when user wants to see comments of a post */\r\nexport default class Post extends Component {\r\n    state = {\r\n        story: null, // to store the information of the story\r\n        loaded: false,\r\n        comments: [] // to store the information of all the comments\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let prom = getStory(this.props.match.params.id)\r\n        prom.then(c => {\r\n            console.log(c)\r\n            this.state.story = c;\r\n            let commentArray = c.kids;\r\n            let promArray = []\r\n            if (c.descendants !== 0) {\r\n                commentArray.forEach(cId => {\r\n                    promArray.push(getStory(cId));\r\n                })\r\n            }\r\n            Promise.all(promArray)\r\n            .then(promRes =>{\r\n                promRes.forEach(i => this.state.comments.push(i));\r\n                this.setState({story: this.state.story, loaded: true, comments: this.state.comments});\r\n            })\r\n        })\r\n    }\r\n    \r\n    /* method that renders the Post and its comments */\r\n    loadPost() {\r\n        if (this.state.loaded){\r\n            let {story, comments} = this.state;\r\n            if (comments.length === 0) {\r\n                return (\r\n                    <div>\r\n                        <Story \r\n                            key={story.id}\r\n                            id={story.id}\r\n                            title={story.title}\r\n                            by={story.by}\r\n                            time={getHumanTime(story.time)}\r\n                            numComments={story.descendants}\r\n                            titleLink={story.url}\r\n                            points={story.score}\r\n                            darkMode={this.props.darkMode}\r\n                        />\r\n                        <p>There are no comments</p>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div>\r\n                        <Story\r\n                            key={story.id}\r\n                            id={story.id}\r\n                            title={story.title}\r\n                            by={story.by}\r\n                            time={getHumanTime(story.time)}\r\n                            numComments={story.descendants}\r\n                            titleLink={story.url}\r\n                            points={story.score}\r\n                            darkMode={this.props.darkMode}\r\n                        />\r\n                        {comments.map(c => c.type === \"comment\" && !c.deleted && !c.dead ? <Comment key={c.id} text={c.text} time={c.time} by={c.by} darkMode={this.props.darkMode}/> : \"\")}\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"spinner-border text-danger\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            this.loadPost()\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from  \"react-router-dom\"\r\n\r\n/* Header of the Top/New stories */\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className={props.darkMode ? \"dark-mode-hackerNews\" : \"hackerNews\"}><Link to=\"/\" className={props.darkMode ? \"dark-mode-hackerNews\": \"hackerNews\"}>Hacker News</Link></h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Switch from \"react-switch\"\r\n\r\n/* Switch to change between dark mode and light mode themes */\r\nexport default function DarkModeSwitch(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <label htmlFor=\"material-switch\">\r\n            <span style={{fontSize: \"30px\", color: props.darkMode ? \"#999\" : \"#e0dd2a\"}}>☼</span>\r\n            <Switch\r\n                checked={props.darkMode}\r\n                onChange={props.themeChange}\r\n                onColor=\"#6a6acd\"\r\n                onHandleColor=\"#2693e6\"\r\n                handleDiameter={20}\r\n                uncheckedIcon={false}\r\n                checkedIcon={false}\r\n                boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                height={10}\r\n                width={48}\r\n                className=\"react-switch\"\r\n                id=\"material-switch\"\r\n            />\r\n            <span style={{fontSize: \"30px\", color: props.darkMode ? \"slateblue\" : \"black\"}}>☽</span>\r\n            </label>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport DarkModeSwitch from \"./darkmodeswitch\";\r\n\r\n/* Navbar that contains the darkmode switch, and links to top/new stories */\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar bg-dark fixed-top navbar-expand\">\r\n                <div className=\"container\">\r\n                    <span className={props.darkMode ? \"navbar-brand mb-0 h1 dark-mode-hackerNews\" : \"navbar-brand mb-0 h1 hackerNewsBrand\"}><Link to=\"/\" className={props.darkMode ? \"dark-mode-hackerNews\": \"hackerNewsBrand\"}>HN</Link></span>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item mr-3\">\r\n                            <h4><NavLink to=\"/\" exact activeStyle={{color: \"rgb(185, 56, 56)\", textDecoration: \"underline\"}} className=\"dark-mode-topNew\">Top</NavLink></h4>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <h4><NavLink to=\"/new\" activeStyle={{color: \"rgb(185, 56, 56)\", textDecoration: \"underline\"}} className=\"dark-mode-topNew\">New</NavLink></h4>\r\n                        </li>\r\n                    </ul>\r\n                    <DarkModeSwitch darkMode={props.darkMode} themeChange={props.themeChange}/>\r\n                </div>\r\n            </nav> \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Stories from \"./stories\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./main.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport User from \"./components/user\";\r\nimport Post from \"./post\";\r\nimport Header from \"./components/header\";\r\nimport Navbar from \"./components/navbar\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        darkMode: this.getInitialTheme()\r\n    }\r\n    componentWillMount() {\r\n        if (this.state.darkMode) {\r\n            document.body.style.backgroundColor = \"#1a1919\";\r\n        } else {\r\n            document.body.style.backgroundColor = \"#e4e4e4\";\r\n        }\r\n    }\r\n    /* Saves dark mode between refreshes and different sessions */\r\n    componentDidUpdate() {\r\n        localStorage.setItem(\"dark\", JSON.stringify(this.state.darkMode));\r\n    }\r\n    getInitialTheme() {\r\n        const theme = JSON.parse(localStorage.getItem(\"dark\"));\r\n        return theme || false;\r\n    }\r\n    /* Change between darkmode and light mode */\r\n    handleThemeChange() {\r\n        if (this.state.darkMode) {\r\n            document.body.style.backgroundColor = \"#e4e4e4\";\r\n            document.body.style.transition = \"0.25s ease-in-out\"\r\n        } else {\r\n            document.body.style.backgroundColor = \"#1a1919\";\r\n            document.body.style.transition = \"0.25s ease-in-out\"\r\n        }\r\n        this.setState({darkMode: !this.state.darkMode});\r\n    }\r\n    render() {\r\n        const { darkMode } = this.state;\r\n        return (\r\n            <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\r\n                <Router>\r\n                <Navbar darkMode={darkMode} themeChange={() => this.handleThemeChange()}/>\r\n                <div className=\"container\">\r\n                        <Header darkMode={darkMode}/>\r\n                        <Route path=\"/\" exact render={(props) => <Stories {...props} darkMode={darkMode}/>}/>\r\n                        <Route path=\"/:type\" exact render={(props) => <Stories {...props} darkMode={darkMode}/>}/>\r\n                        <Route path=\"/user/:id\" exact render={(props) => <User {...props} darkMode={darkMode}/>}/>\r\n                        <Route path=\"/post/:id\" exact render={(props) => <Post {...props} darkMode={darkMode}/>}/>\r\n                </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}