{"version":3,"sources":["components/story.jsx","helpers.js","components/loadingSpinner.jsx","components/user.jsx","components/comment.jsx","post.js","components/header.jsx","components/darkmodeswitch.jsx","components/navbar.jsx","stories.js","App.js","index.js"],"names":["Story","props","darkMode","react_default","a","createElement","className","href","titleLink","target","title","points","react_router_dom","to","concat","by","time","id","numComments","URL","PRTY","getStory","_x","_getStory","apply","this","arguments","_callee","response","storyPromise","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","getHumanTime","unixTime","date","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","amPM","loadStories","_x2","_x3","_loadStories","_callee2","type","that","top","promArray","_context2","console","log","splice","forEach","push","Promise","all","then","promRes","i","state","stories","_unused2","setState","loaded","loadingSpinner","class","role","User","_useState","useState","_useState2","Object","slicedToArray","user","setUser","_useState3","_useState4","setLoaded","_useState5","_useState6","setStories","useEffect","userInfo","u","storyIds","submitted","_ref","asyncToGenerator","mark","userPromise","match","params","storiesComponents","map","story","deleted","dead","story_Story","key","descendants","url","score","filter","created","karma","dangerouslySetInnerHTML","__html","about","length","components_loadingSpinner","loadUser","Comment","text","Post","setStory","comments","setComments","c","commentArray","kids","cId","Header","DarkModeSwitch","Fragment","htmlFor","style","fontSize","color","react_switch_default","checked","onChange","themeChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","Navbar","exact","activeStyle","textDecoration","Stories","_this","topStories","darktheme","_unused","themeTypeStories","Component","App","JSON","parse","localStorage","getItem","setDarkMode","document","body","backgroundColor","basename","transition","setItem","stringify","react_router","path","render","stories_Stories","assign","components_user","post","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.44efb6af.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Component to load an individual story */\r\nexport const Story = (props) => {\r\n    function storyThemeType() {\r\n        if (props.darkMode) {\r\n            return (\r\n                <div className=\"dark-mode-story\">\r\n                    <h5 className=\"storyTitle\"><a className=\"titleLink\" href={props.titleLink} target=\"_blank\">{props.title}</a></h5>\r\n                    <p className=\"storyDetails\">{props.points} points by <Link to={`/user/${props.by}`} className=\"dark-mode-link\">{props.by}</Link> on {props.time} with <Link to={`/post/${props.id}`} className=\"dark-mode-link\">{props.numComments}</Link> comments</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"story\">\r\n                    <h5 className=\"storyTitle\"><a className=\"titleLink\" href={props.titleLink} target=\"_blank\">{props.title}</a></h5>\r\n                    <p className=\"storyDetails\">{props.points} points by <Link to={`/user/${props.by}`} className=\"descriptionLink\">{props.by}</Link> on {props.time} with <Link to={`/post/${props.id}`} className=\"descriptionLink\">{props.numComments}</Link> comments</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        storyThemeType()\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Story } from \"./components/story\"\r\n\r\n\r\nexport const URL= \"https://hacker-news.firebaseio.com/v0/\"; // the base URL to make fetch calls to the Hacker News API\r\nexport const PRTY = \".json?print=pretty\"; // if manually visit the http page, will show the json data nicely formatted. Not necessary but helpful for debugging\r\n\r\n\r\n/* Returns a promise containing an object with the information of the given story id */\r\nexport async function getStory(id) {\r\n    const response = await fetch(`${URL}/item/${id}${PRTY}`);\r\n    let storyPromise = response.json();\r\n    return storyPromise;\r\n}\r\n\r\n\r\n/* Returns a string containing the time in the 'format: mm/dd/yyyy, hh:mm AM/PM' given the unix based time */\r\nexport function getHumanTime(unixTime) {\r\n    let date = new Date(unixTime * 1000);\r\n    let month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`\r\n    let day = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`;\r\n    let year = date.getFullYear() < 10 ? `0${date.getFullYear()}` : `${date.getFullYear()}`;\r\n    let hours = date.getHours() === 0 ? `12` : date.getHours() <= 12 ? `${date.getHours()}` : `${date.getHours() - 12}`;\r\n    let minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : `${date.getMinutes()}`;\r\n    let amPM = date.getHours() >= 12 ? \"PM\" : \"AM\"\r\n    return `${month}/${day}/${year}, ${hours}:${minutes} ${amPM}`\r\n}\r\n\r\n\r\n/* Helper function to load Top/New stories based off type */\r\nexport async function loadStories(type, that) {\r\n    const top = await fetch(`${URL}/${type}${PRTY}`);\r\n    const response = await top.json();\r\n    console.log(response);\r\n    let promArray = []\r\n    response.splice(0,50).forEach(id => {\r\n        promArray.push(getStory(id));\r\n    });\r\n    console.log(promArray)\r\n    Promise.all(promArray)\r\n    .then(promRes => {\r\n        promRes.forEach(i => {\r\n            try {\r\n                if (i.type === \"story\") {\r\n                    that.state.stories.push(i);\r\n                }\r\n            } catch {\r\n                console.log(\"invalid story type\");\r\n            }\r\n        })\r\n        that.setState({stories: that.state.stories, loaded: true});\r\n    })\r\n}\r\n\r\n/* Function to create an array of Top/New stories */\r\nexport function themeTypeStories(darktheme, that) {\r\n    try {\r\n        return that.state.stories.map(story => <Story key={story.id} id={story.id} title={story.title} by={story.by} time={getHumanTime(story.time)} numComments={story.descendants} titleLink={story.url} points={story.score} darkMode={darktheme}/>)\r\n    }\r\n    catch {\r\n        return <h1 style={{color: darktheme ? \"rgb(185,56,56)\" : \"black\"}}>Something went wrong, please reload the page</h1>\r\n    }\r\n}","import React from 'react'\r\n\r\nconst loadingSpinner = () => {\r\n    return (\r\n            <div class=\"d-flex justify-content-center\">\r\n                <div class=\"spinner-border text-danger\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default loadingSpinner;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Story } from \"./story\"\r\nimport { getStory, getHumanTime, URL, PRTY } from \"../helpers\"\r\nimport LoadingSpinner from \"./loadingSpinner\";\r\n\r\n/* Component to load a User containing their name, about me, and posts */\r\nconst User = (props) => {\r\n\r\n    const [user, setUser] = useState(null); // store information about the user\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [stories, setStories] = useState([]); // the stories that the user has posted\r\n\r\n    useEffect(() => {\r\n        let userPromise = userInfo();\r\n        userPromise.then(u => {\r\n            setUser(u);\r\n            let storyIds = u.submitted.splice(0,50);\r\n            console.log(storyIds)\r\n            let promArray = [];\r\n            storyIds.forEach(id => {\r\n                promArray.push(getStory(id));\r\n            })\r\n            Promise.all(promArray)\r\n            .then(promRes => {\r\n                promRes.forEach(i => stories.push(i));\r\n                console.log(stories);\r\n                setStories(stories);\r\n                setLoaded(true);\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    /* Return a Promise containing information about the user given in the url */\r\n    const userInfo = async () => {\r\n        let response = await fetch(`${URL}/user/${props.match.params.id}${PRTY}`)\r\n        let userPromise = response.json();\r\n        return userPromise;\r\n    }\r\n\r\n    /* Renders the User id, about, and their posts to the page */\r\n    const loadUser = () => {\r\n        if (!loaded) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        } else {\r\n            let storiesComponents = stories.map(story => story.type === \"story\" && !story.deleted && !story.dead? <Story key={story.id} id={story.id} title={story.title} by={story.by} time={getHumanTime(story.time)} numComments={story.descendants} titleLink={story.url} points={story.score} darkMode={props.darkMode}/> : null).filter(story => story !== null);\r\n            return (\r\n                <div>\r\n                    <h2 className={props.darkMode ? \"dark-mode-text\" : \"\"}>{user.id}</h2>\r\n                    <p className=\"storyDetails\">Joined <b>{getHumanTime(user.created)}</b> has <b>{user.karma}</b> karma</p>\r\n                    <p className={props.darkMode ? \"aboutUser dark-mode-text\" : \"aboutUser\"} dangerouslySetInnerHTML={{__html: user.about}}></p>\r\n                    <h3 className={props.darkMode ? \"dark-mode-text\" : \"\"}>Posts</h3>\r\n                    {stories.length === 0 ? <p>This user has not posted yet</p> : storiesComponents}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        loadUser()\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { getHumanTime } from \"../helpers\"\n\n/* Component for an individual comment block */\nexport default function Comment(props) {\n    if (props.darkMode) {\n        return (\n            <div className=\"card bg-dark text-light mb-3\">\n                <div className=\"card-body\">\n                    <p className=\"storyDetails\">by <Link to={`/user/${props.by}`} className=\"dark-mode-link\">{props.by}</Link> on {getHumanTime(props.time)}</p>\n                    <p className=\"card-text\" dangerouslySetInnerHTML={{__html: props.text}}></p>\n                </div>\n            </div> \n        )\n    } else {\n        return (\n            <div className=\"card bg-light mb-3\">\n                <div className=\"card-body\">\n                    <p className=\"storyDetails\">by <Link to={`/user/${props.by}`} className=\"descriptionLink\">{props.by}</Link> on {getHumanTime(props.time)}</p>\n                    <p className=\"card-text\" dangerouslySetInnerHTML={{__html: props.text}}></p>\n                </div>\n            </div> \n        )\n    }\n}\n","import React, { useState, useEffect } from 'react';\r\nimport Comment from \"./components/comment\";\r\nimport { getStory, getHumanTime } from \"./helpers\";\r\nimport { Story } from \"./components/story\"\r\nimport LoadingSpinner from \"./components/loadingSpinner\";\r\n\r\n/* The component for individual posts when user wants to see comments of a post */\r\nconst Post = (props) => {\r\n\r\n    const [story, setStory] = useState(null); // to store the information of the story\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [comments, setComments] = useState([]); // to store the information of all the comments\r\n\r\n    useEffect(() => {\r\n        let prom = getStory(props.match.params.id)\r\n        prom.then(c => {\r\n            console.log(c)\r\n            setStory(c);\r\n            let commentArray = c.kids;\r\n            let promArray = []\r\n            if (c.descendants !== 0) {\r\n                commentArray.forEach(cId => {\r\n                    promArray.push(getStory(cId));\r\n                })\r\n            }\r\n            Promise.all(promArray)\r\n            .then(promRes =>{\r\n                promRes.forEach(i => comments.push(i));\r\n                setComments(comments);\r\n                setLoaded(true);\r\n            })\r\n        })\r\n    }, [])\r\n    \r\n    /* method that renders the Post and its comments */\r\n    const loadPost = () => {\r\n        if (loaded){\r\n            if (comments.length === 0) {\r\n                return (\r\n                    <div>\r\n                        <Story \r\n                            key={story.id}\r\n                            id={story.id}\r\n                            title={story.title}\r\n                            by={story.by}\r\n                            time={getHumanTime(story.time)}\r\n                            numComments={story.descendants}\r\n                            titleLink={story.url}\r\n                            points={story.score}\r\n                            darkMode={props.darkMode}\r\n                        />\r\n                        <p>There are no comments</p>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div>\r\n                        <Story\r\n                            key={story.id}\r\n                            id={story.id}\r\n                            title={story.title}\r\n                            by={story.by}\r\n                            time={getHumanTime(story.time)}\r\n                            numComments={story.descendants}\r\n                            titleLink={story.url}\r\n                            points={story.score}\r\n                            darkMode={props.darkMode}\r\n                        />\r\n                        {comments.map(c => c.type === \"comment\" && !c.deleted && !c.dead ? <Comment key={c.id} text={c.text} time={c.time} by={c.by} darkMode={props.darkMode}/> : \"\")}\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        loadPost()\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Link } from  \"react-router-dom\"\r\n\r\n/* Header of the Top/New stories */\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className={props.darkMode ? \"dark-mode-hackerNews\" : \"hackerNews\"}><Link to=\"/\" className={props.darkMode ? \"dark-mode-hackerNews\": \"hackerNews\"}>Hacker News</Link></h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Switch from \"react-switch\"\r\n\r\n/* Switch to change between dark mode and light mode themes */\r\nexport default function DarkModeSwitch(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <label htmlFor=\"material-switch\">\r\n            <span style={{fontSize: \"30px\", color: props.darkMode ? \"#999\" : \"#e0dd2a\"}}>☼</span>\r\n            <Switch\r\n                checked={props.darkMode}\r\n                onChange={props.themeChange}\r\n                onColor=\"#6a6acd\"\r\n                onHandleColor=\"#2693e6\"\r\n                handleDiameter={20}\r\n                uncheckedIcon={false}\r\n                checkedIcon={false}\r\n                boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                height={10}\r\n                width={48}\r\n                className=\"react-switch\"\r\n                id=\"material-switch\"\r\n            />\r\n            <span style={{fontSize: \"30px\", color: props.darkMode ? \"slateblue\" : \"black\"}}>☽</span>\r\n            </label>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport DarkModeSwitch from \"./darkmodeswitch\";\r\n\r\n/* Navbar that contains the darkmode switch, and links to top/new stories */\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar bg-dark fixed-top navbar-expand\">\r\n                <div className=\"container\">\r\n                    <span className={props.darkMode ? \"navbar-brand mb-0 h1 dark-mode-hackerNews\" : \"navbar-brand mb-0 h1 hackerNewsBrand\"}><Link to=\"/\" className={props.darkMode ? \"dark-mode-hackerNews\": \"hackerNewsBrand\"}>HN</Link></span>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item mr-3\">\r\n                            <h4><NavLink to=\"/\" exact activeStyle={{color: \"rgb(185, 56, 56)\", textDecoration: \"underline\"}} className=\"dark-mode-topNew\">Top</NavLink></h4>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <h4><NavLink to=\"/new\" activeStyle={{color: \"rgb(185, 56, 56)\", textDecoration: \"underline\"}} className=\"dark-mode-topNew\">New</NavLink></h4>\r\n                        </li>\r\n                    </ul>\r\n                    <DarkModeSwitch darkMode={props.darkMode} themeChange={props.themeChange}/>\r\n                </div>\r\n            </nav> \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { loadStories, themeTypeStories } from \"./helpers\"\r\n\r\n\r\n/* Component to load the Top/New stories */\r\nexport default class Stories extends Component {\r\n    state = {\r\n        stories: [], // Store the stories from fetch call\r\n        loaded: false,\r\n        darkMode: this.props.darkMode,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let type;\r\n        if (this.props.match.params.type === \"new\") {\r\n            type = \"newstories\";\r\n        } else {\r\n            type = \"topstories\";\r\n        }\r\n        loadStories(type, this);\r\n    }\r\n\r\n    render() {\r\n        const topStories = themeTypeStories(this.props.darkMode, this)\r\n        return (\r\n            <div>\r\n                {this.state.loaded ? topStories :\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"spinner-border text-danger\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport User from \"./components/user\";\r\nimport Post from \"./post\";\r\nimport Header from \"./components/header\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Stories from \"./stories\";\r\n\r\nconst App = () => {\r\n\r\n    const getInitialTheme = () => {\r\n        const theme = JSON.parse(localStorage.getItem(\"dark\"));\r\n        return theme || false;\r\n    }\r\n\r\n    const [darkMode, setDarkMode] = useState(() => getInitialTheme());\r\n\r\n    useEffect(() => {\r\n        if (darkMode) {\r\n            document.body.style.backgroundColor = \"#1a1919\";\r\n        } else {\r\n            document.body.style.backgroundColor = \"#e4e4e4\";\r\n        }\r\n    }, [darkMode])\r\n\r\n\r\n    /* Change between darkmode and light mode */\r\n    const handleThemeChange = () => {\r\n        if (darkMode) {\r\n            document.body.style.backgroundColor = \"#e4e4e4\";\r\n            document.body.style.transition = \"0.25s ease-in-out\"\r\n        } else {\r\n            document.body.style.backgroundColor = \"#1a1919\";\r\n            document.body.style.transition = \"0.25s ease-in-out\"\r\n        }\r\n        setDarkMode(!darkMode);\r\n        /* Saves dark mode between refreshes and different sessions */\r\n        localStorage.setItem(\"dark\", JSON.stringify(!darkMode))\r\n    }\r\n    return (\r\n            <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\r\n                <Router basename=\"/\">\r\n                <Navbar darkMode={darkMode} themeChange={() => handleThemeChange()}/>\r\n                <div className=\"container\">\r\n                        <Header darkMode={darkMode}/>\r\n                        <Route path=\"/\" exact render={(props) => <Stories {...props} darkMode={darkMode}/>}/>\r\n                        <Route path=\"/:type\" exact render={(props) => <Stories {...props} darkMode={darkMode}/>}/>\r\n                        <Route path=\"/user/:id\" exact render={(props) => <User {...props} darkMode={darkMode}/>}/>\r\n                        <Route path=\"/post/:id\" exact render={(props) => <Post {...props} darkMode={darkMode}/>}/>\r\n                </div>\r\n                </Router>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./main.css\";\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}